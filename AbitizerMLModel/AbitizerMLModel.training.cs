﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Abitizer
{
    public partial class AbitizerMLModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"Certificate", @"Certificate"),new InputOutputColumnPair(@"Ukrainian", @"Ukrainian"),new InputOutputColumnPair(@"Math", @"Math"),new InputOutputColumnPair(@"History", @"History"),new InputOutputColumnPair(@"Geography", @"Geography"),new InputOutputColumnPair(@"English", @"English"),new InputOutputColumnPair(@"OtherForeignLang", @"OtherForeignLang"),new InputOutputColumnPair(@"Physics", @"Physics"),new InputOutputColumnPair(@"Biology", @"Biology"),new InputOutputColumnPair(@"Chemistry", @"Chemistry")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Certificate",@"Ukrainian",@"Math",@"History",@"Geography",@"English",@"OtherForeignLang",@"Physics",@"Biology",@"Chemistry"}))      
                                    .Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName:@"UniverSpec",inputColumnName:@"UniverSpec"))      
                                    .Append(mlContext.MulticlassClassification.Trainers.LightGbm(new LightGbmMulticlassTrainer.Options(){NumberOfLeaves=4,NumberOfIterations=4,MinimumExampleCountPerLeaf=20,LearningRate=1,LabelColumnName=@"UniverSpec",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=1,FeatureFraction=1,L1Regularization=2E-10,L2Regularization=1},MaximumBinCountPerFeature=255}))      
                                    .Append(mlContext.Transforms.Conversion.MapKeyToValue(outputColumnName:@"PredictedLabel",inputColumnName:@"PredictedLabel"));

            return pipeline;
        }
    }
}
